import sys

"""
10. Є два упорядкованих за зростанням списки. Потрібно отримати третій упорядкований 
за зростанням список, шляхом злиття перших двох.
бере
Ідея алгоритму: алгоритм  по одному елементу з кожного списку й порівнює їх.
Так як списки вже відсортовані, то обраний елемений з кожного буде гарантовано найменшим.
В кінцевий список записується елемент, що більший і з його списку береться наступний елемент.
Якщо в одному списку елементи закінчились, а в іншому-ні, то в кінцевий список
додаються решта елементів іншого списку

Сортування під час виконння завдання не має сенсу, проте можна перевірити чи списки справді
відсортовані на вході. З урахуванням перевірки складність = O(2(m+n))
"""


def merge_lists(list1, list2):  
    merged = []
    i = j = 0
    while i < len(list1) and j < len(list2):
        if list1[i] < list2[j]:
            merged.append(list1[i])
            i += 1
        else:
            merged.append(list2[j])
            j += 1

    merged += list1[i:]
    merged += list2[j:]
    return merged


def check_sorted(list):
    if any(list[i] > list[i + 1] for i in range(len(list) - 1)):
        print("List is not sorted: ", list)
        sys.exit(1)


list1 = [1, 3, 5, 7, 8, 9, 111, 12, 13, 18]
list2 = [2, 4, 6, 8, 10, 14, 18]

check_sorted(list1)
check_sorted(list2)
merged = merge_lists(list1, list2)
print("Merged List:", merged)
